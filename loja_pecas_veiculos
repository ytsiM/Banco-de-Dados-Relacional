-- Cria a Database loja_pecas_veiculos se ela não existir.
CREATE DATABASE IF NOT EXISTS loja_pecas_veiculos;

USE loja_pecas_veiculos;

-- Cria a tabela Categorias, se ela não existir. Armazena as categorias de peças (ex: motor, freio, suspensão)
CREATE TABLE IF NOT EXISTS Categorias (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY,
    nome_categoria VARCHAR(100) NOT NULL UNIQUE,
    descricao TEXT
);

-- Cria a tabela Fornecedores se ela não existir. Armazena informações sobre os fornecedores das peças
CREATE TABLE IF NOT EXISTS Fornecedores (
    id_fornecedor INT AUTO_INCREMENT PRIMARY KEY,
    nome_fornecedor VARCHAR(255) NOT NULL,
    cnpj VARCHAR(18) UNIQUE,
    contato VARCHAR(100),
    telefone VARCHAR(20),
    email VARCHAR(100)
);

-- Cria a tabela Marcas se ela não existir. Armazena as marcas dos veículos (ex: Fiat, Volkswagen, Ford)
CREATE TABLE IF NOT EXISTS Marcas (
    id_marca INT AUTO_INCREMENT PRIMARY KEY,
    nome_marca VARCHAR(100) NOT NULL UNIQUE
);

-- Cria a tabela Modelos se ela não existir. Armazena os modelos dos veículos (ex: Palio, Gol, Ka)
CREATE TABLE IF NOT EXISTS Modelos (
    id_modelo INT AUTO_INCREMENT PRIMARY KEY,
    nome_modelo VARCHAR(100) NOT NULL,
    id_marca INT NOT NULL,
    FOREIGN KEY (id_marca) REFERENCES Marcas(id_marca)
);

-- Cria a tabela Ano_Modelos se ela não existir. Armazena os anos dos modelos de veículos, permitindo várias versões de ano para um modelo
CREATE TABLE IF NOT EXISTS Ano_Modelos (
    id_ano_modelo INT AUTO_INCREMENT PRIMARY KEY,
    id_modelo INT NOT NULL,
    ano INT NOT NULL,
    FOREIGN KEY (id_modelo) REFERENCES Modelos(id_modelo),
    UNIQUE (id_modelo, ano) -- Garante que um modelo não tenha o mesmo ano duplicado
);

-- Cria a tabela Produtos se ela não existir. Armazena as informações das peças de veículos
CREATE TABLE IF NOT EXISTS Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome_produto VARCHAR(255) NOT NULL,
    descricao TEXT,
    preco_custo DECIMAL(10, 2) NOT NULL,
    preco_venda DECIMAL(10, 2) NOT NULL,
    quantidade_estoque INT NOT NULL,
    id_categoria INT NOT NULL,
    id_fornecedor INT NOT NULL,
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria),
    FOREIGN KEY (id_fornecedor) REFERENCES Fornecedores(id_fornecedor)
);

-- Cria a tabela Compatibilidade_Produto_Veiculo se ela não existir. Mapeia quais produtos são compatíveis com quais modelos/anos de veículos
CREATE TABLE IF NOT EXISTS Compatibilidade_Produto_Veiculo (
    id_compatibilidade INT AUTO_INCREMENT PRIMARY KEY,
    id_produto INT NOT NULL,
    id_ano_modelo INT NOT NULL,
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto),
    FOREIGN KEY (id_ano_modelo) REFERENCES Ano_Modelos(id_ano_modelo),
    UNIQUE (id_produto, id_ano_modelo) -- Garante que uma compatibilidade não seja duplicada
);

-- Cria a tabela Clientes se ela não existir. Armazena as informações dos clientes
CREATE TABLE IF NOT EXISTS Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    cpf VARCHAR(14) UNIQUE,
    endereco VARCHAR(255),
    telefone VARCHAR(20),
    email VARCHAR(100)
);

-- Cria a tabela Vendas se ela não existir. Armazena as informações das vendas realizadas
CREATE TABLE IF NOT EXISTS Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    data_venda DATETIME DEFAULT CURRENT_TIMESTAMP,
    valor_total DECIMAL(10, 2) NOT NULL,
    status_venda ENUM('pendente', 'concluida', 'cancelada') DEFAULT 'pendente',
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);

-- Cria a tabela Itens_Venda se ela não existir. Detalha os produtos em cada venda
CREATE TABLE IF NOT EXISTS Itens_Venda (
    id_item_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_venda INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_venda) REFERENCES Vendas(id_venda),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);
